@* The "shapes" object is an IEnumerable<dynamic> so we just simply enumerate it and use the previously seen
    DisplayAsync helper to display these shapes. *@

@model IEnumerable<dynamic>
@* Titles displayed on the admin need to be wrapped in such a <zone> to be properly displayed (this way they can also be
    displayed in the top bar of the admin theme, something you can enable under Configuration -> Settings -> Admin.) You
    don't need to do this for titles on the frontend. *@
<zone Name="Title">
    @* Note how we use RenderTitleSegments() here. It'll show the title here that might have been collaboratively
        modified by multiple pieces of code (like adding suffixes, section names), and most importantly, it'll also add
        the string supplied here to the <title> tag (which will by default include the site's name as the prefix too,
        like "My Site - Person List"). So use this if you want to display and set the title of a whole page. *@
    <h1>@RenderTitleSegments(T["Person List"])</h1>
</zone>

@if (Model.Any())
{
    <ul class="list-group">
        @foreach (var contentItemSummary in Model)
        {
            <li class="list-group-item">
                @await DisplayAsync(contentItemSummary)
            </li>
        }
    </ul>
}
else
{
    <div class="alert alert-info">
        @T["No result found."]
    </div>
}
